--Each new term in the Fibonacci sequence is generated by adding the previous two terms.
--By starting with 1 and 2, the first 10 terms will be:
--     1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
-- By considering the terms in the Fibonacci sequence whose values do not exceed four million, 
--- find the sum of the even-valued terms.



-- TODO: use memoization to make it fast
fibonacci :: (Eq a, Num a, Num p) => a -> p
fibonacci 0 = 0
fibonacci 1 = 1
fibonacci x = fibonacci (x -1) + fibonacci (x - 2)


allFibonaccis = [fibonacci x | x <- [1..40]]
--main = print (sum [x | x <- all_fibonaccis, mod x 2 == 0])
main = print (sum [x | x <- allFibonaccis, x < 4000000, even x])